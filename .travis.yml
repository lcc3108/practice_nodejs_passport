language: node_js
node_js:
  - 8
cache:
  npm: true
  yarn: true
  directories:
    - $HOME/google-cloud-sdk
    - $HOME/terraform

env:
  global:
    - CLOUDSDK_CORE_DISABLE_PROMPTS=1

before_install:
  - openssl aes-256-cbc -K $encrypted_9c03b547abcf_key -iv $encrypted_9c03b547abcf_iv -in google_key.json.enc -out google_key.json -d

  - |
    if [ ! -d "$HOME/terraform/bin" ]; then
      rm -rf "$HOME/terraform"
      mkdir -p $HOME/terraform/bin
      wget https://releases.hashicorp.com/terraform/0.12.6/terraform_0.12.6_linux_amd64.zip
      unzip terraform_0.12.6_linux_amd64.zip -d $HOME/terraform/bin/
    fi
  - export PATH=$PATH:$HOME/terraform/bin

  - if [ ! -d "$HOME/google-cloud-sdk/bin" ]; then rm -rf "$HOME/google-cloud-sdk"; curl https://sdk.cloud.google.com | bash > /dev/null; fi
  - source $HOME/google-cloud-sdk/path.bash.inc

  - |
    if [ -d "$PWD/$DIRECTORY" ];
    then
      cp google_key.json $PWD/$DIRECTORY
      cd $PWD/$DIRECTORY
    fi

  - gcloud auth activate-service-account --key-file=google_key.json

  # Install codeclimate
  - |
    if [ ! -d "$HOME/cc-test-reporter/bin" ]; then
      rm -rf "$HOME/cc-test-reporter";
      mkdir -p $HOME/cc-test-reporter/bin;
      curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > $HOME/cc-test-reporter/bin/cc-test-reporter;
      chmod +x $HOME/cc-test-reporter/bin/cc-test-reporter
    fi
  - export PATH=$PATH:$HOME/cc-test-reporter/bin

install:
  - yarn

after_script:
  - cd $TRAVIS_BUILD_DIR
  - if [[ "$TRAVIS_TEST_RESULT" == 0 ]]; then cc-test-reporter format-coverage -t lcov -o ./coverage/codeclimate.$TRAVIS_JOB_NUMBER.json ./*/coverage/*.info; fi
  - if [[ "$TRAVIS_TEST_RESULT" == 0 ]]; then gsutil cp -r coverage/ gs://lcc3108-nodejs-test-bucket/coverage/$TRAVIS_BUILD_NUMBER; fi
  - if [[ "$TRAVIS_TEST_RESULT" == 0 ]]; then gsutil cp -r gs://lcc3108-nodejs-test-bucket/coverage/$TRAVIS_BUILD_NUMBER coverage/; fi
  - if [[ "$TRAVIS_TEST_RESULT" == 0 ]]; then cc-test-reporter sum-coverage --output - --parts 1 coverage/*.json | cc-test-reporter upload-coverage --id $CC_TEST_RPORTER_ID --input -; fi

jobs:
  include:
    # Backend test
    - env: DIRECTORY=backend

      before_script:
        - openssl aes-256-cbc -K $encrypted_3390520961c0_key -iv $encrypted_3390520961c0_iv -in .env.enc -out .env -d
        - cc-test-reporter before-build
      script:
        - yarn lint
        - yarn type-check
        - yarn coverage
        - yarn build

    # Frontend Test
    - env: DIRECTORY=frontend
      script:
        - yarn lint
        - yarn type-check
        # - yarn test
        - yarn build

    # Deployment
    - stage: deploy
      before_script:
        - openssl aes-256-cbc -K $encrypted_3390520961c0_key -iv $encrypted_3390520961c0_iv -in backend/.env.enc -out backend/.env -d
      script:
        - yarn build:all
      before_deploy:
        - terraform init
        - gsutil cp gs://lcc3108-nodejs-test-bucket/terraform.tfstate ./terraform.tfstate
      deploy:
        - provider: script
          script: yarn deploy
          skip_cleanup: true
          on:
            branch: master
      after_deploy:
        - gsutil cp ./terraform.tfstate gs://lcc3108-nodejs-test-bucket/
